<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.business.mapper.GoodsMapper">
    
    <resultMap type="Goods" id="GoodsResult">
        <result property="goodsId"    column="goods_id"    />
        <result property="goodsName"    column="goods_name"    />
        <result property="goodsRemark"    column="goods_remark"    />
        <result property="status"    column="status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectGoodsVo">
        select goods_id, goods_name, goods_remark, status, create_by, create_time, update_by, update_time from ye_goods
    </sql>

    <select id="selectGoodsList" parameterType="Goods" resultMap="GoodsResult">
        <include refid="selectGoodsVo"/>
        <where>  
            <if test="goodsName != null  and goodsName != ''"> and goods_name like concat('%', #{goodsName}, '%')</if>
            <if test="goodsRemark != null  and goodsRemark != ''"> and goods_remark = #{goodsRemark}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
        order by create_time desc
    </select>
    
    <select id="selectGoodsByGoodsId" parameterType="Long" resultMap="GoodsResult">
        <include refid="selectGoodsVo"/>
        where goods_id = #{goodsId}
    </select>
        
    <insert id="insertGoods" parameterType="Goods" useGeneratedKeys="true" keyProperty="goodsId">
        insert into ye_goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="goodsName != null">goods_name,</if>
            <if test="goodsRemark != null">goods_remark,</if>
            <if test="status != null">status,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="goodsName != null">#{goodsName},</if>
            <if test="goodsRemark != null">#{goodsRemark},</if>
            <if test="status != null">#{status},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateGoods" parameterType="Goods">
        update ye_goods
        <trim prefix="SET" suffixOverrides=",">
            <if test="goodsName != null">goods_name = #{goodsName},</if>
            <if test="goodsRemark != null">goods_remark = #{goodsRemark},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where goods_id = #{goodsId}
    </update>

    <delete id="deleteGoodsByGoodsId" parameterType="Long">
        delete from ye_goods where goods_id = #{goodsId}
    </delete>

    <delete id="deleteGoodsByGoodsIds" parameterType="String">
        delete from ye_goods where goods_id in 
        <foreach item="goodsId" collection="array" open="(" separator="," close=")">
            #{goodsId}
        </foreach>
    </delete>
</mapper>